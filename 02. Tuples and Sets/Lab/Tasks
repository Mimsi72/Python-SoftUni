Lab: Tuples and Sets
Problems for in-class lab for the Python Advanced Course @SoftUni.
Submit your solutions in the SoftUni judge system at https://judge.softuni.bg/Contests/1832.

1.	Count Same Values
You will be given numbers separated by a space. Write a program which prints the number of occurrences of each
number in the format "{number} - {count} times".

Examples

-2.5 4 3 -2.5 -5.5 4 3 3 -2.5 3


-2.5 - 3 times
4.0 - 2 times
3.0 - 4 times
-5.5 - 1 times


2 4 4 5 5 2 3 3 4 4 3 3 4 3 5 3 2 5 4 3

2.0 - 3 times
4.0 - 6 times
5.0 - 4 times
3.0 - 7 times

2.	Average Student Grades
Write a program which reads names of students and their grades and adds them to the student record.
On the first line you will receive the number of students – N. On the next N lines you will be receiving a student's
name and his/ her grade.
For each student print all his/her grades and finally his/her average grade, formatted to the second decimal point
in the format: "{student's name} -> {grade1} {grade2} … {gradeN} (avg: {average_grade}) ".
The order in which we print the result does not matter.
Examples
Input
7
Peter 5.20
Mark 5.50
Peter 3.20
Mark 2.50
Alex 2.00
Mark 3.46
Alex 3.00

def calculate_average(iterr):
    return sum(iterr) / iterr.count()

avg = calculate_average(student_grades[key])
Mark -> 5.50 2.50 3.46 (avg: 3.82)
Peter -> 5.20 3.20 (avg: 4.20)
Alex -> 2.00 3.00 (avg: 2.50)

4
Scott 4.50
Ted 3.00
Scott 5.00
Ted 3.66	T

ed -> 3.00 3.66 (avg: 3.33)
Scott -> 4.50 5.00 (avg: 4.75)

5
Lee 6.00
Lee 5.50
Lee 6.00
Peter 4.40
Kenny 3.30

Peter -> 4.40 (avg: 4.40)
Lee -> 6.00 5.50 6.00 (avg: 5.83)
Kenny -> 3.30 (avg: 3.30)

    # format(myFloat, '.2f')
    # print(round(myFloat, 2));
    # "%.2f"%key
    #{:.2f}'.format(value)

3.	Record Unique Names
Write a program, which will take a list of names and print only the unique names in the list.
The order in which we print the result does not matter.
Examples

Input
8
Lee
Joey
Lee
Joe
Alan
Alan
Peter
Joey

Output
Alan
Joey
Lee
Joe
Peter

Input
7
Lyle
Bruce
Alice
Easton
Shawn
Alice
Shawn

Output
Easton
Lyle
Alice
Bruce
Shawn

Input
6
Adam
Adam
Adam
Adam
Adam
Adam

Output
Adam


4.	Parking Lot
Write a program that:
•	Records a car number for every car that enters the parking lot
•	Removes a car number when the car leaves the parking lot
On the first line you will receive the number of commands - N. On the next N lines you will receive the direction and car's number in the format:
"{direction}, {car_number}". The direction could only be "IN" or "OUT".
Print the car numbers which are still in the parking lot. If the parking lot is empty print "Parking Lot is Empty".
NOTE: The order in which we print the result does not matter.
Examples

Input
10
IN, CA2844AA
IN, CA1234TA
OUT, CA2844AA
IN, CA9999TT
IN, CA2866HI
OUT, CA1234TA
IN, CA2844AA
OUT, CA2866HI
IN, CA9876HH
IN, CA2822UU

Output
CA2844AA
CA9999TT
CA2822UU
CA9876HH

Input
4
IN, CA2844AA
IN, CA1234TA
OUT, CA2844AA
OUT,

Output
Parking Lot is Empty

Hints
•	Car numbers are unique

5.	SoftUni Party
There is a party at SoftUni. Many guests are invited and there are two types of them: Regular and VIP. When a guest comes,
check if he/she exists in any of the two reservation lists.
All reservation codes are 8 characters long and all VIP numbers will start with a digit.
On the first line you will receive the number of guests – N. On the next N lines you will be receiving their reservation codes.
After that, you will be receiving guests, who came to the party, until you read the "END" command.
In the end, print the number of the guests who did not come to the party and their reservation numbers. The VIP guests must be first.
Both the VIP and the Regular guests must be sorted in ascending order.

Examples:

Input
5
7IK9Yo0h
9NoBUajQ
Ce8vwPmE
SVQXQCbc
tSzE5t0p
9NoBUajQ
Ce8vwPmE
SVQXQCbc
END

Output
2
7IK9Yo0h
tSzE5t0p

Input
6
m8rfQBvl
fc1oZCE0
UgffRkOn
7ugX7bm0
9CQBGUeJ
2FQZT3uC
2FQZT3uC
9CQBGUeJ
fc1oZCE0
END

Output
3
7ugX7bm0
UgffRkOn
m8rfQBvl

